const BookingType = ({ event, setSelectedEvent }) => {
  const parser = new DOMParser(); // creates a new DOMParser instance to parse HTML strings
  const doc = parser.parseFromString(event.description_html, "text/html"); // parse the event's description HTML into a document object

  // extract all <p> elements, get their text content, trim whitespace, and filter out empty strings
  const paragraphs = Array.from(doc.querySelectorAll("p"))
    .map((p) => p.textContent.trim())
    .filter((p) => p !== "");

  const price = paragraphs[0]; // set the first paragraph to price
  const description = paragraphs[1]; // set the second paragraph as description

  // shorten the description to ~25 words for a short preview
  const words = description.split(" ");
  const shortDescription =
    words.length > 25 ? words.slice(0, 20).join(" ") + "..." : description;

  return (
    <li className="bg-grey p-m flex flex-col items-start rounded-lg">
      <h4 className="mb-xs">{event.name}</h4>

      <p className="flex-center gap-xs">
        <svg
          width="20"
          height="20"
          viewBox="0 0 20 20"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <g id="Objects &#38; Things/money-bill">
            <path
              id="Vector"
              d="M4.99967 9.16699C4.83486 9.16699 4.67374 9.21587 4.5367 9.30743C4.39966 9.399 4.29285 9.52915 4.22977 9.68142C4.1667 9.83369 4.1502 10.0012 4.18235 10.1629C4.21451 10.3246 4.29387 10.473 4.41042 10.5896C4.52696 10.7061 4.67545 10.7855 4.8371 10.8176C4.99875 10.8498 5.16631 10.8333 5.31858 10.7702C5.47085 10.7072 5.601 10.6003 5.69257 10.4633C5.78413 10.3263 5.83301 10.1651 5.83301 10.0003C5.83301 9.77931 5.74521 9.56735 5.58893 9.41107C5.43265 9.25479 5.22069 9.16699 4.99967 9.16699ZM14.9997 9.16699C14.8349 9.16699 14.6737 9.21587 14.5367 9.30743C14.3997 9.399 14.2928 9.52915 14.2298 9.68142C14.1667 9.83369 14.1502 10.0012 14.1824 10.1629C14.2145 10.3246 14.2939 10.473 14.4104 10.5896C14.527 10.7061 14.6754 10.7855 14.8371 10.8176C14.9987 10.8498 15.1663 10.8333 15.3186 10.7702C15.4708 10.7072 15.601 10.6003 15.6926 10.4633C15.7841 10.3263 15.833 10.1651 15.833 10.0003C15.833 9.77931 15.7452 9.56735 15.5889 9.41107C15.4326 9.25479 15.2207 9.16699 14.9997 9.16699ZM16.6663 4.16699H3.33301C2.66997 4.16699 2.03408 4.43038 1.56524 4.89923C1.0964 5.36807 0.833008 6.00395 0.833008 6.66699V13.3337C0.833008 13.9967 1.0964 14.6326 1.56524 15.1014C2.03408 15.5703 2.66997 15.8337 3.33301 15.8337H16.6663C17.3294 15.8337 17.9653 15.5703 18.4341 15.1014C18.9029 14.6326 19.1663 13.9967 19.1663 13.3337V6.66699C19.1663 6.00395 18.9029 5.36807 18.4341 4.89923C17.9653 4.43038 17.3294 4.16699 16.6663 4.16699ZM17.4997 13.3337C17.4997 13.5547 17.4119 13.7666 17.2556 13.9229C17.0993 14.0792 16.8874 14.167 16.6663 14.167H3.33301C3.11199 14.167 2.90003 14.0792 2.74375 13.9229C2.58747 13.7666 2.49967 13.5547 2.49967 13.3337V6.66699C2.49967 6.44598 2.58747 6.23402 2.74375 6.07774C2.90003 5.92146 3.11199 5.83366 3.33301 5.83366H16.6663C16.8874 5.83366 17.0993 5.92146 17.2556 6.07774C17.4119 6.23402 17.4997 6.44598 17.4997 6.66699V13.3337ZM9.99967 7.50033C9.50522 7.50033 9.02187 7.64695 8.61075 7.92165C8.19963 8.19636 7.87919 8.5868 7.68997 9.04362C7.50076 9.50043 7.45125 10.0031 7.54771 10.4881C7.64417 10.973 7.88228 11.4185 8.23191 11.7681C8.58154 12.1177 9.027 12.3558 9.51195 12.4523C9.9969 12.5488 10.4996 12.4992 10.9564 12.31C11.4132 12.1208 11.8036 11.8004 12.0783 11.3893C12.3531 10.9781 12.4997 10.4948 12.4997 10.0003C12.4997 9.33728 12.2363 8.7014 11.7674 8.23256C11.2986 7.76372 10.6627 7.50033 9.99967 7.50033ZM9.99967 10.8337C9.83486 10.8337 9.67374 10.7848 9.5367 10.6932C9.39966 10.6016 9.29285 10.4715 9.22977 10.3192C9.1667 10.167 9.1502 9.9994 9.18235 9.83775C9.21451 9.6761 9.29387 9.52761 9.41042 9.41107C9.52696 9.29453 9.67545 9.21516 9.8371 9.183C9.99875 9.15085 10.1663 9.16735 10.3186 9.23043C10.4708 9.2935 10.601 9.40031 10.6926 9.53735C10.7841 9.67439 10.833 9.83551 10.833 10.0003C10.833 10.2213 10.7452 10.4333 10.5889 10.5896C10.4326 10.7459 10.2207 10.8337 9.99967 10.8337Z"
              fill="#1B1B1B"
            />
          </g>
        </svg>
        {price}
      </p>
      <p className="flex-center gap-xs">
        <svg
          width="20"
          height="20"
          viewBox="0 0 20 20"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <g id="Objects &#38; Things/clock-eight">
            <path
              id="Vector"
              d="M9.16634 1.66699C7.51817 1.66699 5.907 2.15573 4.53659 3.07141C3.16618 3.98709 2.09808 5.28858 1.46735 6.8113C0.836619 8.33401 0.671591 10.0096 0.993134 11.6261C1.31468 13.2426 2.10835 14.7274 3.27379 15.8929C4.43923 17.0583 5.92408 17.852 7.54059 18.1735C9.1571 18.4951 10.8327 18.3301 12.3554 17.6993C13.8781 17.0686 15.1796 16.0005 16.0953 14.6301C17.0109 13.2597 17.4997 11.6485 17.4997 10.0003C17.4997 8.90598 17.2841 7.82234 16.8653 6.8113C16.4466 5.80025 15.8327 4.88159 15.0589 4.10777C14.2851 3.33395 13.3664 2.72012 12.3554 2.30133C11.3443 1.88254 10.2607 1.66699 9.16634 1.66699ZM9.16634 16.667C7.8478 16.667 6.55887 16.276 5.46254 15.5435C4.36622 14.8109 3.51173 13.7697 3.00715 12.5515C2.50256 11.3334 2.37054 9.99293 2.62778 8.69972C2.88501 7.40652 3.51995 6.21863 4.4523 5.28628C5.38465 4.35393 6.57254 3.71899 7.86574 3.46176C9.15895 3.20452 10.4994 3.33654 11.7176 3.84113C12.9357 4.34571 13.9769 5.2002 14.7095 6.29652C15.442 7.39285 15.833 8.68178 15.833 10.0003C15.833 11.7684 15.1306 13.4641 13.8804 14.7144C12.6301 15.9646 10.9345 16.667 9.16634 16.667ZM9.16634 5.00033C8.94533 5.00033 8.73337 5.08812 8.57709 5.2444C8.42081 5.40068 8.33301 5.61265 8.33301 5.83366V9.51699L6.58301 10.5253C6.42248 10.6163 6.29667 10.758 6.22533 10.9281C6.15399 11.0983 6.14114 11.2873 6.1888 11.4656C6.23646 11.6439 6.34194 11.8013 6.48869 11.9131C6.63544 12.025 6.81516 12.0849 6.99968 12.0837C7.14566 12.0847 7.28934 12.0473 7.41634 11.9753L9.58301 10.7253L9.65801 10.6503L9.79134 10.542C9.82393 10.5007 9.85188 10.456 9.87468 10.4087C9.90184 10.3639 9.92418 10.3164 9.94135 10.267C9.96401 10.214 9.97808 10.1577 9.98301 10.1003L9.99968 10.0003V5.83366C9.99968 5.61265 9.91188 5.40068 9.7556 5.2444C9.59932 5.08812 9.38736 5.00033 9.16634 5.00033Z"
              fill="#1B1B1B"
            />
          </g>
        </svg>
        {event.duration} minutter
      </p>

      <p className="mb-l">{shortDescription}</p>

      <button
        onClick={() => setSelectedEvent(event)}
        className="button text-caption/tight mt-auto cursor-pointer"
      >
        Book tid
      </button>
    </li>
  );
};

export default BookingType;
